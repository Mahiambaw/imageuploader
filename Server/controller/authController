const Users = require("../models/userModel");
const jwt = require("jsonwebtoken");

const signToken = (id) => {
  return jwt.sign({ id }, process.env.JWT_SECRET, {
    expiresIn: process.env.JWT_EXPIRES_IN,
  });
};

const createSendToken = (user, statusCode, res) => {
  const token = signToken(user._id);

  user.password = undefined;
  // removes the password from the output
  res.status(statusCode).json({
    status: "sucess",
    token,
    data: {
      user,
    },
  });
};

exports.signup = async (req, res, next) => {
  try {
    const newUser = await Users.create({
      name: req.body.name,
      email: req.body.email,
      password: req.body.password,
    });

    createSendToken(newUser, 200, res);
    next();
  } catch (err) {
    console.log(err);
  }
};

exports.login = async (req, res, next) => {
  try {
    const { email, password } = req.body;

    //1) check if email and password exists
    if (!email || !password) {
      throw new Error("email or password is does not exist");
    }

    // 2)check if the user exists && password correct
    const user = await Users.findOne({ email }).select("+password");

    if (!user || !(await user.correctPassowrd(password, user.password))) {
      throw new Error("Incorrect email or password");
    }

    // 3) if everything is ok, send token to client
    createSendToken(user, 200, res);
    next();
  } catch (err) {
    res.status(500).json({
      error: err.message,
    });
  }
};
